/*
 * This file is generated by jOOQ.
 */
package ru.chsergeig.shoppy.jooq.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.chsergeig.shoppy.jooq.enums.Status;
import ru.chsergeig.shoppy.jooq.tables.Order;
import ru.chsergeig.shoppy.jooq.tables.records.OrderRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderDao extends DAOImpl<OrderRecord, ru.chsergeig.shoppy.jooq.tables.pojos.Order, Integer> {

    /**
     * Create a new OrderDao without any configuration
     */
    public OrderDao() {
        super(Order.ORDER, ru.chsergeig.shoppy.jooq.tables.pojos.Order.class);
    }

    /**
     * Create a new OrderDao with an attached configuration
     */
    public OrderDao(Configuration configuration) {
        super(Order.ORDER, ru.chsergeig.shoppy.jooq.tables.pojos.Order.class, configuration);
    }

    @Override
    public Integer getId(ru.chsergeig.shoppy.jooq.tables.pojos.Order object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Order.ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchById(Integer... values) {
        return fetch(Order.ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.chsergeig.shoppy.jooq.tables.pojos.Order fetchOneById(Integer value) {
        return fetchOne(Order.ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>info BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchRangeOfInfo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.INFO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>info IN (values)</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchByInfo(String... values) {
        return fetch(Order.ORDER.INFO, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchRangeOfStatus(Status lowerInclusive, Status upperInclusive) {
        return fetchRange(Order.ORDER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<ru.chsergeig.shoppy.jooq.tables.pojos.Order> fetchByStatus(Status... values) {
        return fetch(Order.ORDER.STATUS, values);
    }
}
