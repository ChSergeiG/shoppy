/*
 * This file is generated by jOOQ.
 */
package ru.chsergeig.shoppy.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.chsergeig.shoppy.jooq.tables.OrdersGoods;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersGoodsRecord extends UpdatableRecordImpl<OrdersGoodsRecord> implements Record3<Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders_goods.order_id</code>. Order id
     */
    public OrdersGoodsRecord setOrderId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_goods.order_id</code>. Order id
     */
    public Integer getOrderId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.orders_goods.good_id</code>. Good id
     */
    public OrdersGoodsRecord setGoodId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_goods.good_id</code>. Good id
     */
    public Integer getGoodId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.orders_goods.count</code>. Count of ordered goods
     */
    public OrdersGoodsRecord setCount(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_goods.count</code>. Count of ordered goods
     */
    public Long getCount() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return OrdersGoods.ORDERS_GOODS.ORDER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return OrdersGoods.ORDERS_GOODS.GOOD_ID;
    }

    @Override
    public Field<Long> field3() {
        return OrdersGoods.ORDERS_GOODS.COUNT;
    }

    @Override
    public Integer component1() {
        return getOrderId();
    }

    @Override
    public Integer component2() {
        return getGoodId();
    }

    @Override
    public Long component3() {
        return getCount();
    }

    @Override
    public Integer value1() {
        return getOrderId();
    }

    @Override
    public Integer value2() {
        return getGoodId();
    }

    @Override
    public Long value3() {
        return getCount();
    }

    @Override
    public OrdersGoodsRecord value1(Integer value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrdersGoodsRecord value2(Integer value) {
        setGoodId(value);
        return this;
    }

    @Override
    public OrdersGoodsRecord value3(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public OrdersGoodsRecord values(Integer value1, Integer value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersGoodsRecord
     */
    public OrdersGoodsRecord() {
        super(OrdersGoods.ORDERS_GOODS);
    }

    /**
     * Create a detached, initialised OrdersGoodsRecord
     */
    public OrdersGoodsRecord(Integer orderId, Integer goodId, Long count) {
        super(OrdersGoods.ORDERS_GOODS);

        setOrderId(orderId);
        setGoodId(goodId);
        setCount(count);
    }

    /**
     * Create a detached, initialised OrdersGoodsRecord
     */
    public OrdersGoodsRecord(ru.chsergeig.shoppy.jooq.tables.pojos.OrdersGoods value) {
        super(OrdersGoods.ORDERS_GOODS);

        if (value != null) {
            setOrderId(value.getOrderId());
            setGoodId(value.getGoodId());
            setCount(value.getCount());
        }
    }
}
