/*
 * This file is generated by jOOQ.
 */
package ru.chsergeig.shoppy.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import ru.chsergeig.shoppy.jooq.enums.AccountRole;
import ru.chsergeig.shoppy.jooq.tables.AccountsRoles;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRolesRecord extends TableRecordImpl<AccountsRolesRecord> implements Record2<Integer, AccountRole> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accounts_roles.account_id</code>.
     */
    public AccountsRolesRecord setAccountId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_roles.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.accounts_roles.role</code>.
     */
    public AccountsRolesRecord setRole(AccountRole value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_roles.role</code>.
     */
    public AccountRole getRole() {
        return (AccountRole) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, AccountRole> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, AccountRole> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AccountsRoles.ACCOUNTS_ROLES.ACCOUNT_ID;
    }

    @Override
    public Field<AccountRole> field2() {
        return AccountsRoles.ACCOUNTS_ROLES.ROLE;
    }

    @Override
    public Integer component1() {
        return getAccountId();
    }

    @Override
    public AccountRole component2() {
        return getRole();
    }

    @Override
    public Integer value1() {
        return getAccountId();
    }

    @Override
    public AccountRole value2() {
        return getRole();
    }

    @Override
    public AccountsRolesRecord value1(Integer value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountsRolesRecord value2(AccountRole value) {
        setRole(value);
        return this;
    }

    @Override
    public AccountsRolesRecord values(Integer value1, AccountRole value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRolesRecord
     */
    public AccountsRolesRecord() {
        super(AccountsRoles.ACCOUNTS_ROLES);
    }

    /**
     * Create a detached, initialised AccountsRolesRecord
     */
    public AccountsRolesRecord(Integer accountId, AccountRole role) {
        super(AccountsRoles.ACCOUNTS_ROLES);

        setAccountId(accountId);
        setRole(role);
    }

    /**
     * Create a detached, initialised AccountsRolesRecord
     */
    public AccountsRolesRecord(ru.chsergeig.shoppy.jooq.tables.pojos.AccountsRoles value) {
        super(AccountsRoles.ACCOUNTS_ROLES);

        if (value != null) {
            setAccountId(value.getAccountId());
            setRole(value.getRole());
        }
    }
}
