/*
 * This file is generated by jOOQ.
 */
package ru.chsergeig.shoppy.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.chsergeig.shoppy.jooq.enums.Status;
import ru.chsergeig.shoppy.jooq.tables.Accounts;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record5<Integer, String, String, Boolean, Status> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accounts.id</code>.
     */
    public AccountsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.accounts.login</code>. User login
     */
    public AccountsRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.login</code>. User login
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.accounts.password</code>. Password of the user
     */
    public AccountsRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.password</code>. Password of the user
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.accounts.salted</code>. Is password salted
     */
    public AccountsRecord setSalted(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.salted</code>. Is password salted
     */
    public Boolean getSalted() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.accounts.status</code>. User account status
     */
    public AccountsRecord setStatus(Status value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.status</code>. User account status
     */
    public Status getStatus() {
        return (Status) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Boolean, Status> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Boolean, Status> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Accounts.ACCOUNTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.PASSWORD;
    }

    @Override
    public Field<Boolean> field4() {
        return Accounts.ACCOUNTS.SALTED;
    }

    @Override
    public Field<Status> field5() {
        return Accounts.ACCOUNTS.STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Boolean component4() {
        return getSalted();
    }

    @Override
    public Status component5() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Boolean value4() {
        return getSalted();
    }

    @Override
    public Status value5() {
        return getStatus();
    }

    @Override
    public AccountsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AccountsRecord value4(Boolean value) {
        setSalted(value);
        return this;
    }

    @Override
    public AccountsRecord value5(Status value) {
        setStatus(value);
        return this;
    }

    @Override
    public AccountsRecord values(Integer value1, String value2, String value3, Boolean value4, Status value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(Integer id, String login, String password, Boolean salted, Status status) {
        super(Accounts.ACCOUNTS);

        setId(id);
        setLogin(login);
        setPassword(password);
        setSalted(salted);
        setStatus(status);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(ru.chsergeig.shoppy.jooq.tables.pojos.Accounts value) {
        super(Accounts.ACCOUNTS);

        if (value != null) {
            setId(value.getId());
            setLogin(value.getLogin());
            setPassword(value.getPassword());
            setSalted(value.getSalted());
            setStatus(value.getStatus());
        }
    }
}
