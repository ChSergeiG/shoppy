/*
 * This file is generated by jOOQ.
 */
package ru.chsergeig.shoppy.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import ru.chsergeig.shoppy.jooq.enums.Status;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JwtTokens implements Serializable {

    private static final long serialVersionUID = 1L;

    private String         token;
    private OffsetDateTime validUntil;
    private Status         status;

    public JwtTokens() {}

    public JwtTokens(JwtTokens value) {
        this.token = value.token;
        this.validUntil = value.validUntil;
        this.status = value.status;
    }

    public JwtTokens(
        String         token,
        OffsetDateTime validUntil,
        Status         status
    ) {
        this.token = token;
        this.validUntil = validUntil;
        this.status = status;
    }

    /**
     * Getter for <code>public.jwt_tokens.token</code>. Token sha256
     */
    public String getToken() {
        return this.token;
    }

    /**
     * Setter for <code>public.jwt_tokens.token</code>. Token sha256
     */
    public JwtTokens setToken(String token) {
        this.token = token;
        return this;
    }

    /**
     * Getter for <code>public.jwt_tokens.valid_until</code>. Token expiration
     * date
     */
    public OffsetDateTime getValidUntil() {
        return this.validUntil;
    }

    /**
     * Setter for <code>public.jwt_tokens.valid_until</code>. Token expiration
     * date
     */
    public JwtTokens setValidUntil(OffsetDateTime validUntil) {
        this.validUntil = validUntil;
        return this;
    }

    /**
     * Getter for <code>public.jwt_tokens.status</code>. Token status
     */
    public Status getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.jwt_tokens.status</code>. Token status
     */
    public JwtTokens setStatus(Status status) {
        this.status = status;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JwtTokens (");

        sb.append(token);
        sb.append(", ").append(validUntil);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }
}
